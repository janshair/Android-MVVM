def dependencyGroup(Closure closure) {
    closure.delegate = dependencies
    return closure
}

configurations {
    ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
}
//preBuild.dependsOn(ktlint)

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style violations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}

ext {

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // CORE                                                                                       //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    core = dependencyGroup {

        // Libraries //
        implementation fileTree(dir: 'libs', include: ['*.jar'])

        // Kotlin //
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

        // Timber //
        implementation "com.jakewharton.timber:timber:$timber_version"

        ktlint "com.github.shyiko:ktlint:0.29.0"

    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // SUPPORT                                                                                    //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    support = dependencyGroup {

        // Support Library //
        implementation "androidx.core:core:$android_x"
        implementation "androidx.appcompat:appcompat:$android_x"
        implementation "androidx.cardview:cardview:$android_x"
        implementation "androidx.recyclerview:recyclerview:$android_x"
        implementation "com.google.android.material:material:$android_material_design"
        implementation "androidx.constraintlayout:constraintlayout:$android_x_constraintLayout"

        // Life cycle
        implementation "androidx.lifecycle:lifecycle-extensions:$architecture_components_version"
        implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_live_data"
        implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_live_data"
        implementation "androidx.core:core-ktx:$android_ktx"



    }


    glide = dependencyGroup {
        implementation "com.github.bumptech.glide:glide:$glide_version"
        kapt "com.github.bumptech.glide:compiler:$glide_version"
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // DAGGER                                                                                     //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    dagger = dependencyGroup {

        // Dagger //
        implementation "com.google.dagger:dagger:$dagger_version"
        kapt "com.google.dagger:dagger-compiler:$dagger_version"
        implementation "com.google.dagger:dagger-android:$dagger_version"
        implementation "com.google.dagger:dagger-android-support:$dagger_version"
        kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // RXJAVA                                                                                     //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    rxJava = dependencyGroup {

        // RxJava //
        implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid_version"
        implementation "io.reactivex.rxjava2:rxjava:$rxJava_version"

        //Bindings
        implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // Room                                                                                     //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    room = dependencyGroup {
        implementation "androidx.room:room-runtime:$room_version"
        kapt "androidx.room:room-compiler:$room_version"
        implementation "androidx.room:room-ktx:$room_version"
        testImplementation "androidx.room:room-testing:$room_version"
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // Coroutines                                                                                     //
    ////////////////////////////////////////////////////////////////////////////////////////////////


    coroutines = dependencyGroup {
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
        implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$coroutines_call_adapter"
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////
    // NETWORKING                                                                                 //
    ////////////////////////////////////////////////////////////////////////////////////////////////


    networking = dependencyGroup {

        // Retrofit //
        implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
        implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
        implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

        // OkHttp //
        implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
        implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

        // Gson //
        implementation "com.google.code.gson:gson:$gson_version"

    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // TESTING                                                                                    //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    testing = dependencyGroup {

        // JUnit //
        testImplementation("junit:junit:$junit_version")
    }
}